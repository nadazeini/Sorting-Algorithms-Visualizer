{"version":3,"sources":["SortingAlgorithms/sortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getHeapSortAnimations","n","buildMaxHeap","swap","doHeapSort","console","log","largest","left_child","right_child","a","temp","SortingVisualizer","props","state","array_length","speed","val","this","setState","resetArray","min","max","random","window","location","reload","document","getElementById","disabled","title","bar_size","len","className","id","value","onChange","e","toggle_length","target","name","type","role","aria-label","onClick","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","btnClickFast","bind","btnClickNormal","btnClickSlow","seeAnother","mergeSort","quickSort","heapSort","ref","bubbleSort","selectionSort","inserstionSort","map","idx","key","textcontent","style","fontSize","height","width","disableButtons","arrayBars","getElementsByClassName","arrayBarsWithNo","numbersBars","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","barOneStyleNo","barTwoStyleNo","color","setTimeout","backgroundColor","newHeight","newH","toString","replace","textContent","auxArray","tmp","doBubbleSort","getBubbleSortAnimations","animateAlgo","doInsertionSort","getInsertionSortAnimations","min_index","doSelectionSort","getSelectionSortAnimations","React","Component","$","ready","click","html","text","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c128007.chunk.js","sourcesContent":["/* Merge Sort\n ******************************************************************************************************************************************************************************************************************************************************************************************************************** */\nexport function getMergeSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) \n    return array;\n  const auxiliaryArray = array.slice();\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction mergeSortHelper(mainArray, startIdx, endIdx, auxiliaryArray, animations) {\n  if (startIdx === endIdx) \n    return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    animations.push([i, j]);\n    animations.push([i, j]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      animations.push([\n        k, auxiliaryArray[i]\n      ]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      animations.push([\n        k, auxiliaryArray[j]\n      ]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([\n      k, auxiliaryArray[i]\n    ]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([j, j]);\n    animations.push([j, j]);\n    animations.push([\n      k, auxiliaryArray[j]\n    ]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n/* Bubble Sort\n ******************************************************************************************************************************************************************************************************************************************************************************************************************** */\nexport function getBubbleSortAnimations(array) {\n  let animations = [];\n  let auxArray = array.slice();\n  doBubbleSort(auxArray, animations);\n  array = auxArray;\n  return animations;\n}\n\nfunction doBubbleSort(auxArray, animations) {\n  for (let i = 0; i < auxArray.length - 1; i++) {\n    for (let j = 0; j < auxArray.length - 1 - i; j++) {\n      //push once to color\n      animations.push([\n        j, j + 1\n      ]);\n      //push second time to uncolor?\n      animations.push([\n        j, j + 1\n      ]);\n      if (auxArray[j] > auxArray[j + 1]) {\n        //swap\n        animations.push([\n          j + 1,\n          auxArray[j]\n        ]);\n        animations.push([\n          j,\n          auxArray[j + 1]\n        ]);\n\n        let tmp = auxArray[j + 1];\n        auxArray[j + 1] = auxArray[j];\n        auxArray[j] = tmp;\n      } else {\n        // if -1 then there was no swap\n        animations.push([-1, -1]);\n        animations.push([-1, -1]);\n        //not sure if twice\n      }\n    }\n  }\n}\n/* Insertion Sort\n ******************************************************************************************************************************************************************************************************************************************************************************************************************** */\nexport function getInsertionSortAnimations(array) {\n  const animations = [];\n  //let auxArray = array.slice();\n  doInsertionSort(array, animations);\n  //array = auxArray;  not needed but will see\n  return animations;\n}\n\nfunction doInsertionSort(array, animations) {\n  for (let i = 0; i < array.length; i++) {\n    for (let j = i; j > 0; j--) {\n      if (array[j] < array[j - 1]) {\n        animations.push([\n          j, j - 1\n        ]);\n        animations.push([\n          j, j - 1\n        ]);\n        animations.push([\n          j - 1,\n          array[j]\n        ]);\n        animations.push([\n          j,\n          array[j - 1]\n        ]);\n        let temp = array[j];\n        array[j] = array[j - 1];\n        array[j - 1] = temp;\n      }\n    }\n  }\n}\n/* Selection Sort\n/******************************************************************************************************************************************************************************************************************************************************************************************************************** */\nexport function getSelectionSortAnimations(array) {\n  const animations = [];\n  doSelectionSort(array, animations);\n  return animations;\n}\n\nfunction doSelectionSort(array, animations) {\n  for (let i = 0; i < array.length - 1; i++) {\n    let min_index = i;\n    for (let j = i + 1; j < array.length; j++) {\n      animations.push([min_index, j]); //color\n      animations.push([min_index, j]); //uncolor\n      animations.push([\n        0, array[0]\n      ]);\n      animations.push([\n        0, array[0]\n      ]);\n      if (array[j] < array[min_index]) {\n        min_index = j;\n      }\n    }\n    animations.push([i, min_index]);\n    animations.push([i, min_index]);\n    animations.push([\n      i, array[min_index]\n    ]);\n    animations.push([\n      min_index, array[i]\n    ]);\n    let temp = array[min_index];\n    array[min_index] = array[i];\n    array[i] = temp;\n  }\n}\n/* Heap Sort\n ******************************************************************************************************************************************************************************************************************************************************************************************************************** */\nexport function getHeapSortAnimations(array) {\n  const animations = [];\n  doHeapSort(array, animations);\n  console.log(animations);\n  return animations;\n}\n\nfunction doHeapSort(array, animations) {\n  let n = array.length;\n  for (let i = Math.floor(n / 2); i >= 0; i--) {\n    buildMaxHeap(array, n, i, animations);\n  }\n  //remove root node\n  for (let j = n - 1; j > 0; j--) {\n    swap(array, 0, j, animations);\n\n    //heapify the reduced heap\n    n--;\n    buildMaxHeap(array, n, 0, animations);\n  }\n}\n\nfunction buildMaxHeap(array, n, i, animations) {\n  let largest = i;\n  let left_child = i * 2 + 1;\n  let right_child = i * 2 + 2;\n\n  if (left_child < n && array[left_child] > array[largest]) {\n    //console.log(left_child);\n    //console.log(right_child);\n    //console.log(animations);\n    animations.push([left_child, largest]); //color 2 bars\n    animations.push([left_child, largest]); //uncolor them\n    animations.push([\n      0, array[0]\n    ]);\n    animations.push([\n      0, array[0]\n    ]);\n    largest = left_child;\n  }\n  if (right_child < n && array[right_child] > array[largest]) {\n    animations.push([right_child, largest]); //color 2 bars\n    animations.push([right_child, largest]);\n    animations.push([\n      0, array[0]\n    ]);\n    animations.push([\n      0, array[0]\n    ]);\n    largest = right_child;\n  }\n  if (largest !== i) {\n    //not equal to root\n    //then we swap\n    /*  let temp = array[i];\n                                                                                                                array[i] = array[largest];\n                                                                                                                array[largest] = temp;\n                                                                                                            */\n    swap(array, i, largest, animations);\n    //heapidy the subtree\n    buildMaxHeap(array, n, largest, animations);\n  }\n}\n\nfunction swap(a, i, j, animations) {\n  animations.push([i, j]);\n  animations.push([i, j]);\n  animations.push([\n    i, a[j]\n  ]); //swapped in bars\n  animations.push([\n    j, a[i]\n  ]); //swapped in bars\n  let temp = a[i];\n  a[i] = a[j];\n  a[j] = temp;\n}\n","import React from 'react';\nimport './SortingVisualizer.css';\nimport {\n\tgetMergeSortAnimations,\n\tgetBubbleSortAnimations,\n\tgetInsertionSortAnimations,\n\tgetSelectionSortAnimations,\n\tgetHeapSortAnimations\n} from '../SortingAlgorithms/sortingAlgorithms.js';\nimport $ from 'jquery';\nconst PRIMARY_COLOR = 'rgb(255, 198, 92)';\nconst SECONDARY_COLOR = 'purple';\nconst THIRD_COLOR = 'rgb(255, 198, 92)';\n\nexport default class SortingVisualizer extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t//this.selectSpeed = this.selectSpeed.bind(this);\n\t\tthis.state = {\n\t\t\tarray: [],\n\t\t\tarray_length: 34, //props.array_length,\n\t\t\tspeed: 1\n\t\t};\n\t\t// this.toggle_length = this.toggle_length.bind(this);\n\t}\n\ttoggle_length(val) {\n\t\t//console.log(val);\n\t\tthis.setState({ array_length: val });\n\t\tthis.resetArray();\n\t}\n\tcomponentDidMount() {\n\t\t//first time loading\n\t\tthis.resetArray();\n\t}\n\tresetArray() {\n\t\t//creates array\n\t\tconst array = [];\n\t\t// let len = this.state.array_length;\n\n\t\tfor (let i = 0; i < this.state.array_length; i++) {\n\t\t\tarray.push(randomInt(10, 500));\n\t\t}\n\t\tthis.setState({ array });\n\t}\n\tseeAnother() {\n\t\twindow.location.reload();\n\t}\n\tbtnClickSlow() {\n\t\tthis.setState({ speed: 80 });\n\t}\n\tbtnClickFast() {\n\t\tthis.setState({ speed: 1 });\n\t}\n\n\tbtnClickNormal() {\n\t\tthis.setState({ speed: 30 });\n\t}\n\tdisableButtons() {\n\t\tdocument.getElementById('shuffle').disabled = true;\n\t\tdocument.getElementById('speed').disabled = true;\n\t\tdocument.getElementById('quick').disabled = true;\n\t\tdocument.getElementById('bubble').disabled = true;\n\t\tdocument.getElementById('selection').disabled = true;\n\t\tdocument.getElementById('insertion').disabled = true;\n\t\tdocument.getElementById('heap').disabled = true;\n\t\tdocument.getElementById('merge').disabled = true;\n\t\tdocument.getElementById('slider').disabled = true;\n\t\tdocument.getElementById('shuffle').title = 'Click See Another';\n\t\tdocument.getElementById('speed').title = 'Click See Another';\n\t\tdocument.getElementById('quick').title = 'Click See Another';\n\t\tdocument.getElementById('bubble').title = 'Click See Another';\n\t\tdocument.getElementById('selection').title = 'Click See Another';\n\t\tdocument.getElementById('insertion').title = 'Click See Another';\n\t\tdocument.getElementById('heap').title = 'Click See Another';\n\t\tdocument.getElementById('merge').title = 'Click See Another';\n\t\tdocument.getElementById('slider').title = 'Click See Another';\n\t}\n\tenableButtons() {\n\t\tdocument.getElementById('shuffle').disabled = false;\n\t\tdocument.getElementById('speed').disabled = false;\n\t\tdocument.getElementById('quick').disabled = false;\n\t\tdocument.getElementById('bubble').disabled = false;\n\t\tdocument.getElementById('selection').disabled = false;\n\t\tdocument.getElementById('insertion').disabled = false;\n\t\tdocument.getElementById('heap').disabled = false;\n\t\tdocument.getElementById('merge').disabled = false;\n\t\tdocument.getElementById('slider').disabled = false;\n\t}\n\trender() {\n\t\tconst { array } = this.state;\n\t\t//if array len is between is less or equal to 37\n\t\tlet bar_size = '';\n\t\tconst len = this.state.array_length;\n\t\tlet font_size = '';\n\n\t\t//make a function later\n\t\t//can be automated\n\t\tif (len <= 33) {\n\t\t\tbar_size = '30px';\n\t\t}\n\t\tif (len > 33 && len < 37) {\n\t\t\tbar_size = '28px';\n\t\t}\n\t\tif (len >= 37 && len <= 40) {\n\t\t\tbar_size = '25px';\n\t\t}\n\t\tif (len > 40 && len <= 43) {\n\t\t\tbar_size = '22px';\n\t\t}\n\t\tif (len > 43 && len <= 47) {\n\t\t\tbar_size = '20px';\n\t\t}\n\t\tif (len > 47 && len <= 50) {\n\t\t\tbar_size = '18px';\n\t\t}\n\t\tif (len > 50 && len <= 53) {\n\t\t\tbar_size = '17px';\n\t\t}\n\t\tif (len > 53 && len <= 58) {\n\t\t\tbar_size = '16px';\n\t\t}\n\t\tif (len > 58 && len <= 64) {\n\t\t\tbar_size = '14px';\n\t\t}\n\t\tif (len > 64 && len <= 66) {\n\t\t\tbar_size = '13px';\n\t\t}\n\t\tif (len > 66 && len <= 72) {\n\t\t\tbar_size = '12px';\n\t\t}\n\t\tif (len > 72 && len <= 80) {\n\t\t\tbar_size = '11px';\n\t\t}\n\t\tif (len > 80 && len <= 90) {\n\t\t\tbar_size = '10px';\n\t\t}\n\t\tif (len > 90 && len <= 100) {\n\t\t\tbar_size = '9px';\n\t\t}\n\t\tif (len > 100 && len <= 120) {\n\t\t\tbar_size = '7px';\n\t\t}\n\t\tif (len > 120 && len <= 137) {\n\t\t\tbar_size = '6px';\n\t\t}\n\t\tif (len > 137 && len <= 150) {\n\t\t\tbar_size = '5px';\n\t\t}\n\t\tif (len > 150 && len <= 183) {\n\t\t\tbar_size = '4px';\n\t\t}\n\t\tif (len > 183 && len <= 220) {\n\t\t\tbar_size = '3px';\n\t\t}\n\t\tif (len > 220 && len <= 280) {\n\t\t\tbar_size = '2px';\n\t\t}\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\t<div className='nav-bar'>\n\t\t\t\t\t<div className='row justify-content-center pb-3 '>\n\t\t\t\t\t\t<div className='col-md-3 '>\n\t\t\t\t\t\t\t<div className='slider row justify-content-center'>\n\t\t\t\t\t\t\t\t<label className='boot-color'>Number of Bars</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid='slider'\n\t\t\t\t\t\t\t\t\tclassName='slider1 custom-range'\n\t\t\t\t\t\t\t\t\tvalue={this.state.array_length}\n\t\t\t\t\t\t\t\t\tonChange={e => this.toggle_length(e.target.value)}\n\t\t\t\t\t\t\t\t\tname='arraySize'\n\t\t\t\t\t\t\t\t\ttype='range'\n\t\t\t\t\t\t\t\t\tmin='5'\n\t\t\t\t\t\t\t\t\tmax='275'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='btn-group mr-2' role='group' aria-label='First group'>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tid='shuffle'\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\tclassName='btn btn-secondary boot-background boot-color boot-hover'\n\t\t\t\t\t\t\tonClick={() => this.resetArray()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tShuffle\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div className='dropdown'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=' dropdownMenuButton btn btn-secondary dropdown-toggle boot-background boot-color boot-hover'\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tid='speed'\n\t\t\t\t\t\t\t\tdata-toggle='dropdown'\n\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\taria-expanded='false'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tFast\n\t\t\t\t\t\t\t\t<span className='caret' />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName='dropdown-menu boot-background boot-color '\n\t\t\t\t\t\t\t\taria-labelledby='dropdownMenuButton'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='btn btn-secondary dropdown-item boot-background boot-color boot-hover '\n\t\t\t\t\t\t\t\t\tvalue='3'\n\t\t\t\t\t\t\t\t\tonClick={this.btnClickFast.bind(this)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tFast\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='btn btn-secondary dropdown-item boot-background boot-color boot-hover '\n\t\t\t\t\t\t\t\t\tvalue='60'\n\t\t\t\t\t\t\t\t\tonClick={this.btnClickNormal.bind(this)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tNormal\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='btn btn-secondary dropdown-item boot-background boot-color  boot-hover'\n\t\t\t\t\t\t\t\t\tvalue='200'\n\t\t\t\t\t\t\t\t\tonClick={this.btnClickSlow.bind(this)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSlow\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tid='try'\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\tclassName='btn btn-secondary boot-background boot-color boot-hover'\n\t\t\t\t\t\t\tonClick={() => this.seeAnother()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSee Another\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tid='merge'\n\t\t\t\t\t\tclassName='btn btn-outline-secondary boot-background boot-color boot-hover'\n\t\t\t\t\t\tonClick={() => this.mergeSort()}\n\t\t\t\t\t>\n\t\t\t\t\t\tMerge Sort\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tid='quick'\n\t\t\t\t\t\tclassName='btn btn-outline-secondary boot-background boot-color boot-hover'\n\t\t\t\t\t\tonClick={() => this.quickSort()}\n\t\t\t\t\t>\n\t\t\t\t\t\tQuick Sort\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tid='heap'\n\t\t\t\t\t\tclassName='btn btn-outline-secondary boot-background boot-color boot-hover'\n\t\t\t\t\t\tonClick={() => this.heapSort()}\n\t\t\t\t\t>\n\t\t\t\t\t\tHeap Sort\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tref='btn'\n\t\t\t\t\t\tid='bubble'\n\t\t\t\t\t\tclassName='stop-propagation btn btn-outline-secondary boot-background boot-color boot-hover'\n\t\t\t\t\t\tonClick={() => this.bubbleSort()}\n\t\t\t\t\t>\n\t\t\t\t\t\tBubble Sort\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tid='selection'\n\t\t\t\t\t\tclassName='btn btn-outline-secondary boot-background boot-color boot-hover'\n\t\t\t\t\t\tonClick={() => this.selectionSort()}\n\t\t\t\t\t>\n\t\t\t\t\t\tSelection Sort\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tid='insertion'\n\t\t\t\t\t\tclassName='btn btn-outline-secondary boot-background boot-color boot-hover'\n\t\t\t\t\t\tonClick={() => this.inserstionSort()}\n\t\t\t\t\t>\n\t\t\t\t\t\tInsertion Sort\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t{array.map((value, idx) => (\n\t\t\t\t\t<div className='array-container' key={idx}>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='numbers'\n\t\t\t\t\t\t\tid='numbers'\n\t\t\t\t\t\t\ttextcontent={value}\n\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\tthis.state.array_length <= 37\n\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\tfontSize: '3%'\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\tfontSize: '0%'\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='array-bar'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\theight: `${value}px`,\n\t\t\t\t\t\t\t\twidth: bar_size\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t//MERGE SORT\n\t//******************************************************************************************************************************************************************************************************************************************************************************************************************** */\n\tmergeSort() {\n\t\tconst animations = getMergeSortAnimations(this.state.array);\n\t\tthis.disableButtons();\n\t\tfor (let i = 0; i < animations.length; i++) {\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\n\t\t\tconst arrayBarsWithNo = document.getElementsByClassName(\n\t\t\t\t'array-container'\n\t\t\t);\n\t\t\tconst numbersBars = document.getElementsByClassName('numbers');\n\t\t\tconst isColorChange = i % 3 !== 2;\n\t\t\tif (isColorChange) {\n\t\t\t\tconst [barOneIdx, barTwoIdx] = animations[i];\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\n\t\t\t\tconst barOneStyleNo = arrayBarsWithNo[barOneIdx].style;\n\t\t\t\tconst barTwoStyleNo = arrayBarsWithNo[barTwoIdx].style;\n\t\t\t\tconst color = i % 3 === 0 ? SECONDARY_COLOR : THIRD_COLOR;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\n\t\t\t\t\tbarOneStyleNo.backgroundColor = color;\n\t\t\t\t\tbarTwoStyleNo.backgroundColor = color;\n\t\t\t\t\t//num1.textContent = num2Text;\n\t\t\t\t\t//num2.textContent = num1.textContent;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t} else {\n\t\t\t\t//console.log(numbersBars[barOneIdx]);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst [barOneIdx, newHeight] = animations[i];\n\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\tlet newH = newHeight;\n\t\t\t\t\tnewH = newH.toString().replace('px', '');\n\t\t\t\t\tnumbersBars[barOneIdx].textContent = newH;\n\t\t\t\t\tbarOneStyle.height = `${newHeight}px`;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t}\n\t\t}\n\t}\n\n\t//BUBBLE SORT\n\t//******************************************************************************************************************************************************************************************************************************************************************************************************************** */\n\tbubbleSort() {\n\t\tthis.disableButtons();\n\t\tlet array = this.state.array;\n\t\tlet animations = getBubbleSortAnimations(array);\n\t\tfor (let i = 0; i < animations.length; i++) {\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\n\t\t\tconst arrayBarsWithNo = document.getElementsByClassName(\n\t\t\t\t'array-container'\n\t\t\t);\n\t\t\tconst numbersBars = document.getElementsByClassName('numbers');\n\t\t\t//color change is on ever 4 indexes: 0, 4, 8 ...\n\t\t\tconst colorChange = i % 4 === 0 || i % 4 === 1;\n\t\t\tif (colorChange) {\n\t\t\t\tconst [barOneIdx, barTwoIdx] = animations[i];\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\n\t\t\t\tconst barOneStyleNo = arrayBarsWithNo[barOneIdx].style;\n\t\t\t\tconst barTwoStyleNo = arrayBarsWithNo[barTwoIdx].style;\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\n\t\t\t\t\tbarOneStyleNo.backgroundColor = color;\n\t\t\t\t\tbarTwoStyleNo.backgroundColor = color;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t} else {\n\t\t\t\tconst [barOneIdx, newHeight] = animations[i];\n\t\t\t\tif (barOneIdx === -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\tlet newH = newHeight;\n\t\t\t\tnewH = newH.toString().replace('px', '');\n\n\t\t\t\t//console.log(numbersBars[barOneIdx]);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tnumbersBars[barOneIdx].textContent = newH;\n\t\t\t\t\tbarOneStyle.height = `${newHeight}px`;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t}\n\t\t}\n\t}\n\t//******************************************************************************************************************************************************************************************************************************************************************************************************************** */\n\tinserstionSort() {\n\t\tthis.animateAlgo(getInsertionSortAnimations(this.state.array));\n\t}\n\tselectionSort() {\n\t\tthis.animateAlgo(getSelectionSortAnimations(this.state.array));\n\t}\n\theapSort() {\n\t\tthis.animateAlgo(getHeapSortAnimations(this.state.array));\n\t}\n\tquickSort() {}\n\n\tanimateAlgo(animations) {\n\t\tthis.disableButtons();\n\t\t// let array = this.state.array;\n\t\t//const animations = animation;\n\t\tfor (let i = 0; i < animations.length; i++) {\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\n\t\t\tconst arrayBarsWithNo = document.getElementsByClassName(\n\t\t\t\t'array-container'\n\t\t\t);\n\t\t\tconst numbersBars = document.getElementsByClassName('numbers');\n\t\t\t//color change is on ever 4 indexes: 0, 4, 8 ...\n\t\t\tconst colorChange = i % 4 <= 1;\n\t\t\tif (colorChange) {\n\t\t\t\tconst [barOneIdx, barTwoIdx] = animations[i];\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\n\t\t\t\tconst barOneStyleNo = arrayBarsWithNo[barOneIdx].style;\n\t\t\t\tconst barTwoStyleNo = arrayBarsWithNo[barTwoIdx].style;\n\t\t\t\tconst color = i % 4 === 0 ? SECONDARY_COLOR : THIRD_COLOR;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\n\t\t\t\t\tbarOneStyleNo.backgroundColor = color;\n\t\t\t\t\tbarTwoStyleNo.backgroundColor = color;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t} else {\n\t\t\t\tconst [, newHeight] = animations[i];\n\t\t\t\t// /const barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\tlet newH = newHeight;\n\t\t\t\tnewH = newH.toString().replace('px', '');\n\t\t\t\t//console.log(numbersBars[barOneIdx]);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst [barOneIdx, newHeight] = animations[i];\n\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\n\t\t\t\t\tnumbersBars[barOneIdx].textContent = newH; //\n\t\t\t\t\tbarOneStyle.height = `${newHeight}px`;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction randomInt(min, max) {\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\n}\n//takes care of drop down button: changes text when you change speed\n$(document).ready(function() {\n\t$('.dropdown-menu  button').click(function() {\n\t\t$('.dropdownMenuButton:first-child').html(\n\t\t\t$(this).text() + ' <span class=\"caret\"></span>'\n\t\t);\n\t});\n});\n","import React from 'react';\nimport './App.css';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<SortingVisualizer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(< App / >, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}